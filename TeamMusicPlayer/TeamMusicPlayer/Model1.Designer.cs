//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("mydbModel", "idSongInfo", "songinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TeamMusicPlayer.songinfo), "userpurchases", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TeamMusicPlayer.userpurchas), true)]
[assembly: EdmRelationshipAttribute("mydbModel", "uerAddID", "useraddress", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TeamMusicPlayer.useraddress), "userinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TeamMusicPlayer.userinfo), true)]
[assembly: EdmRelationshipAttribute("mydbModel", "userCreditCardID", "usercreditcardinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TeamMusicPlayer.usercreditcardinfo), "userinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TeamMusicPlayer.userinfo), true)]
[assembly: EdmRelationshipAttribute("mydbModel", "userPurchasesID", "userpurchases", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TeamMusicPlayer.userpurchas), "userinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TeamMusicPlayer.userinfo), true)]
[assembly: EdmRelationshipAttribute("mydbModel", "playlist_song", "songinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TeamMusicPlayer.songinfo), "userplaylist", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TeamMusicPlayer.userplaylist))]

#endregion

namespace TeamMusicPlayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class mydbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new mydbEntities object using the connection string found in the 'mydbEntities' section of the application configuration file.
        /// </summary>
        public mydbEntities() : base("name=mydbEntities", "mydbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new mydbEntities object.
        /// </summary>
        public mydbEntities(string connectionString) : base(connectionString, "mydbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new mydbEntities object.
        /// </summary>
        public mydbEntities(EntityConnection connection) : base(connection, "mydbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<songalbum> songalbums
        {
            get
            {
                if ((_songalbums == null))
                {
                    _songalbums = base.CreateObjectSet<songalbum>("songalbums");
                }
                return _songalbums;
            }
        }
        private ObjectSet<songalbum> _songalbums;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<songartist> songartists
        {
            get
            {
                if ((_songartists == null))
                {
                    _songartists = base.CreateObjectSet<songartist>("songartists");
                }
                return _songartists;
            }
        }
        private ObjectSet<songartist> _songartists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<songinfo> songinfoes
        {
            get
            {
                if ((_songinfoes == null))
                {
                    _songinfoes = base.CreateObjectSet<songinfo>("songinfoes");
                }
                return _songinfoes;
            }
        }
        private ObjectSet<songinfo> _songinfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<useraddress> useraddresses
        {
            get
            {
                if ((_useraddresses == null))
                {
                    _useraddresses = base.CreateObjectSet<useraddress>("useraddresses");
                }
                return _useraddresses;
            }
        }
        private ObjectSet<useraddress> _useraddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<usercreditcardinfo> usercreditcardinfoes
        {
            get
            {
                if ((_usercreditcardinfoes == null))
                {
                    _usercreditcardinfoes = base.CreateObjectSet<usercreditcardinfo>("usercreditcardinfoes");
                }
                return _usercreditcardinfoes;
            }
        }
        private ObjectSet<usercreditcardinfo> _usercreditcardinfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<userinfo> userinfoes
        {
            get
            {
                if ((_userinfoes == null))
                {
                    _userinfoes = base.CreateObjectSet<userinfo>("userinfoes");
                }
                return _userinfoes;
            }
        }
        private ObjectSet<userinfo> _userinfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<userplaylist> userplaylists
        {
            get
            {
                if ((_userplaylists == null))
                {
                    _userplaylists = base.CreateObjectSet<userplaylist>("userplaylists");
                }
                return _userplaylists;
            }
        }
        private ObjectSet<userplaylist> _userplaylists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<userpurchas> userpurchases
        {
            get
            {
                if ((_userpurchases == null))
                {
                    _userpurchases = base.CreateObjectSet<userpurchas>("userpurchases");
                }
                return _userpurchases;
            }
        }
        private ObjectSet<userpurchas> _userpurchases;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the songalbums EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosongalbums(songalbum songalbum)
        {
            base.AddObject("songalbums", songalbum);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the songartists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosongartists(songartist songartist)
        {
            base.AddObject("songartists", songartist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the songinfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosonginfoes(songinfo songinfo)
        {
            base.AddObject("songinfoes", songinfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the useraddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTouseraddresses(useraddress useraddress)
        {
            base.AddObject("useraddresses", useraddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the usercreditcardinfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTousercreditcardinfoes(usercreditcardinfo usercreditcardinfo)
        {
            base.AddObject("usercreditcardinfoes", usercreditcardinfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the userinfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTouserinfoes(userinfo userinfo)
        {
            base.AddObject("userinfoes", userinfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the userplaylists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTouserplaylists(userplaylist userplaylist)
        {
            base.AddObject("userplaylists", userplaylist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the userpurchases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTouserpurchases(userpurchas userpurchas)
        {
            base.AddObject("userpurchases", userpurchas);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mydbModel", Name="songalbum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class songalbum : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new songalbum object.
        /// </summary>
        /// <param name="songAlbumID">Initial value of the songAlbumID property.</param>
        public static songalbum Createsongalbum(global::System.Int32 songAlbumID)
        {
            songalbum songalbum = new songalbum();
            songalbum.songAlbumID = songAlbumID;
            return songalbum;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 songAlbumID
        {
            get
            {
                return _songAlbumID;
            }
            set
            {
                if (_songAlbumID != value)
                {
                    OnsongAlbumIDChanging(value);
                    ReportPropertyChanging("songAlbumID");
                    _songAlbumID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("songAlbumID");
                    OnsongAlbumIDChanged();
                }
            }
        }
        private global::System.Int32 _songAlbumID;
        partial void OnsongAlbumIDChanging(global::System.Int32 value);
        partial void OnsongAlbumIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String songAlbumName
        {
            get
            {
                return _songAlbumName;
            }
            set
            {
                OnsongAlbumNameChanging(value);
                ReportPropertyChanging("songAlbumName");
                _songAlbumName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("songAlbumName");
                OnsongAlbumNameChanged();
            }
        }
        private global::System.String _songAlbumName;
        partial void OnsongAlbumNameChanging(global::System.String value);
        partial void OnsongAlbumNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String songAlbumLabel
        {
            get
            {
                return _songAlbumLabel;
            }
            set
            {
                OnsongAlbumLabelChanging(value);
                ReportPropertyChanging("songAlbumLabel");
                _songAlbumLabel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("songAlbumLabel");
                OnsongAlbumLabelChanged();
            }
        }
        private global::System.String _songAlbumLabel;
        partial void OnsongAlbumLabelChanging(global::System.String value);
        partial void OnsongAlbumLabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String songAlbumYear
        {
            get
            {
                return _songAlbumYear;
            }
            set
            {
                OnsongAlbumYearChanging(value);
                ReportPropertyChanging("songAlbumYear");
                _songAlbumYear = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("songAlbumYear");
                OnsongAlbumYearChanged();
            }
        }
        private global::System.String _songAlbumYear;
        partial void OnsongAlbumYearChanging(global::System.String value);
        partial void OnsongAlbumYearChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mydbModel", Name="songartist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class songartist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new songartist object.
        /// </summary>
        /// <param name="songArtistID">Initial value of the songArtistID property.</param>
        public static songartist Createsongartist(global::System.Int32 songArtistID)
        {
            songartist songartist = new songartist();
            songartist.songArtistID = songArtistID;
            return songartist;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 songArtistID
        {
            get
            {
                return _songArtistID;
            }
            set
            {
                if (_songArtistID != value)
                {
                    OnsongArtistIDChanging(value);
                    ReportPropertyChanging("songArtistID");
                    _songArtistID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("songArtistID");
                    OnsongArtistIDChanged();
                }
            }
        }
        private global::System.Int32 _songArtistID;
        partial void OnsongArtistIDChanging(global::System.Int32 value);
        partial void OnsongArtistIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ArtistName
        {
            get
            {
                return _ArtistName;
            }
            set
            {
                OnArtistNameChanging(value);
                ReportPropertyChanging("ArtistName");
                _ArtistName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ArtistName");
                OnArtistNameChanged();
            }
        }
        private global::System.String _ArtistName;
        partial void OnArtistNameChanging(global::System.String value);
        partial void OnArtistNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ArtistLabel
        {
            get
            {
                return _ArtistLabel;
            }
            set
            {
                OnArtistLabelChanging(value);
                ReportPropertyChanging("ArtistLabel");
                _ArtistLabel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ArtistLabel");
                OnArtistLabelChanged();
            }
        }
        private global::System.String _ArtistLabel;
        partial void OnArtistLabelChanging(global::System.String value);
        partial void OnArtistLabelChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mydbModel", Name="songinfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class songinfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new songinfo object.
        /// </summary>
        /// <param name="idSongInfo">Initial value of the idSongInfo property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static songinfo Createsonginfo(global::System.Int32 idSongInfo, global::System.String title)
        {
            songinfo songinfo = new songinfo();
            songinfo.idSongInfo = idSongInfo;
            songinfo.Title = title;
            return songinfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idSongInfo
        {
            get
            {
                return _idSongInfo;
            }
            set
            {
                if (_idSongInfo != value)
                {
                    OnidSongInfoChanging(value);
                    ReportPropertyChanging("idSongInfo");
                    _idSongInfo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idSongInfo");
                    OnidSongInfoChanged();
                }
            }
        }
        private global::System.Int32 _idSongInfo;
        partial void OnidSongInfoChanging(global::System.Int32 value);
        partial void OnidSongInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Artist
        {
            get
            {
                return _Artist;
            }
            set
            {
                OnArtistChanging(value);
                ReportPropertyChanging("Artist");
                _Artist = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Artist");
                OnArtistChanged();
            }
        }
        private global::System.String _Artist;
        partial void OnArtistChanging(global::System.String value);
        partial void OnArtistChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Genre
        {
            get
            {
                return _Genre;
            }
            set
            {
                OnGenreChanging(value);
                ReportPropertyChanging("Genre");
                _Genre = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Genre");
                OnGenreChanged();
            }
        }
        private global::System.String _Genre;
        partial void OnGenreChanging(global::System.String value);
        partial void OnGenreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Album
        {
            get
            {
                return _Album;
            }
            set
            {
                OnAlbumChanging(value);
                ReportPropertyChanging("Album");
                _Album = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Album");
                OnAlbumChanged();
            }
        }
        private global::System.String _Album;
        partial void OnAlbumChanging(global::System.String value);
        partial void OnAlbumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AlbumTrack
        {
            get
            {
                return _AlbumTrack;
            }
            set
            {
                OnAlbumTrackChanging(value);
                ReportPropertyChanging("AlbumTrack");
                _AlbumTrack = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlbumTrack");
                OnAlbumTrackChanged();
            }
        }
        private Nullable<global::System.Int32> _AlbumTrack;
        partial void OnAlbumTrackChanging(Nullable<global::System.Int32> value);
        partial void OnAlbumTrackChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private Nullable<global::System.Int32> _Year;
        partial void OnYearChanging(Nullable<global::System.Int32> value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PlayCount
        {
            get
            {
                return _PlayCount;
            }
            set
            {
                OnPlayCountChanging(value);
                ReportPropertyChanging("PlayCount");
                _PlayCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlayCount");
                OnPlayCountChanged();
            }
        }
        private Nullable<global::System.Int32> _PlayCount;
        partial void OnPlayCountChanging(Nullable<global::System.Int32> value);
        partial void OnPlayCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BPM
        {
            get
            {
                return _BPM;
            }
            set
            {
                OnBPMChanging(value);
                ReportPropertyChanging("BPM");
                _BPM = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BPM");
                OnBPMChanged();
            }
        }
        private Nullable<global::System.Int32> _BPM;
        partial void OnBPMChanging(Nullable<global::System.Int32> value);
        partial void OnBPMChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mydbModel", "idSongInfo", "userpurchases")]
        public EntityCollection<userpurchas> userpurchases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<userpurchas>("mydbModel.idSongInfo", "userpurchases");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<userpurchas>("mydbModel.idSongInfo", "userpurchases", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mydbModel", "playlist_song", "userplaylist")]
        public EntityCollection<userplaylist> userplaylists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<userplaylist>("mydbModel.playlist_song", "userplaylist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<userplaylist>("mydbModel.playlist_song", "userplaylist", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mydbModel", Name="useraddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class useraddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new useraddress object.
        /// </summary>
        /// <param name="userAddID">Initial value of the userAddID property.</param>
        public static useraddress Createuseraddress(global::System.Int32 userAddID)
        {
            useraddress useraddress = new useraddress();
            useraddress.userAddID = userAddID;
            return useraddress;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userAddID
        {
            get
            {
                return _userAddID;
            }
            set
            {
                if (_userAddID != value)
                {
                    OnuserAddIDChanging(value);
                    ReportPropertyChanging("userAddID");
                    _userAddID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("userAddID");
                    OnuserAddIDChanged();
                }
            }
        }
        private global::System.Int32 _userAddID;
        partial void OnuserAddIDChanging(global::System.Int32 value);
        partial void OnuserAddIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userStreet
        {
            get
            {
                return _userStreet;
            }
            set
            {
                OnuserStreetChanging(value);
                ReportPropertyChanging("userStreet");
                _userStreet = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userStreet");
                OnuserStreetChanged();
            }
        }
        private global::System.String _userStreet;
        partial void OnuserStreetChanging(global::System.String value);
        partial void OnuserStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userCity
        {
            get
            {
                return _userCity;
            }
            set
            {
                OnuserCityChanging(value);
                ReportPropertyChanging("userCity");
                _userCity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userCity");
                OnuserCityChanged();
            }
        }
        private global::System.String _userCity;
        partial void OnuserCityChanging(global::System.String value);
        partial void OnuserCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userState
        {
            get
            {
                return _userState;
            }
            set
            {
                OnuserStateChanging(value);
                ReportPropertyChanging("userState");
                _userState = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userState");
                OnuserStateChanged();
            }
        }
        private global::System.String _userState;
        partial void OnuserStateChanging(global::System.String value);
        partial void OnuserStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userZip
        {
            get
            {
                return _userZip;
            }
            set
            {
                OnuserZipChanging(value);
                ReportPropertyChanging("userZip");
                _userZip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userZip");
                OnuserZipChanged();
            }
        }
        private global::System.String _userZip;
        partial void OnuserZipChanging(global::System.String value);
        partial void OnuserZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userCountry
        {
            get
            {
                return _userCountry;
            }
            set
            {
                OnuserCountryChanging(value);
                ReportPropertyChanging("userCountry");
                _userCountry = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userCountry");
                OnuserCountryChanged();
            }
        }
        private global::System.String _userCountry;
        partial void OnuserCountryChanging(global::System.String value);
        partial void OnuserCountryChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mydbModel", "uerAddID", "userinfo")]
        public EntityCollection<userinfo> userinfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<userinfo>("mydbModel.uerAddID", "userinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<userinfo>("mydbModel.uerAddID", "userinfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mydbModel", Name="usercreditcardinfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class usercreditcardinfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usercreditcardinfo object.
        /// </summary>
        /// <param name="userCreditCardID">Initial value of the userCreditCardID property.</param>
        public static usercreditcardinfo Createusercreditcardinfo(global::System.Int32 userCreditCardID)
        {
            usercreditcardinfo usercreditcardinfo = new usercreditcardinfo();
            usercreditcardinfo.userCreditCardID = userCreditCardID;
            return usercreditcardinfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userCreditCardID
        {
            get
            {
                return _userCreditCardID;
            }
            set
            {
                if (_userCreditCardID != value)
                {
                    OnuserCreditCardIDChanging(value);
                    ReportPropertyChanging("userCreditCardID");
                    _userCreditCardID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("userCreditCardID");
                    OnuserCreditCardIDChanged();
                }
            }
        }
        private global::System.Int32 _userCreditCardID;
        partial void OnuserCreditCardIDChanging(global::System.Int32 value);
        partial void OnuserCreditCardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userCardType
        {
            get
            {
                return _userCardType;
            }
            set
            {
                OnuserCardTypeChanging(value);
                ReportPropertyChanging("userCardType");
                _userCardType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userCardType");
                OnuserCardTypeChanged();
            }
        }
        private global::System.String _userCardType;
        partial void OnuserCardTypeChanging(global::System.String value);
        partial void OnuserCardTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userCreditCardNumber
        {
            get
            {
                return _userCreditCardNumber;
            }
            set
            {
                OnuserCreditCardNumberChanging(value);
                ReportPropertyChanging("userCreditCardNumber");
                _userCreditCardNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userCreditCardNumber");
                OnuserCreditCardNumberChanged();
            }
        }
        private global::System.String _userCreditCardNumber;
        partial void OnuserCreditCardNumberChanging(global::System.String value);
        partial void OnuserCreditCardNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userCardExpDate
        {
            get
            {
                return _userCardExpDate;
            }
            set
            {
                OnuserCardExpDateChanging(value);
                ReportPropertyChanging("userCardExpDate");
                _userCardExpDate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userCardExpDate");
                OnuserCardExpDateChanged();
            }
        }
        private global::System.String _userCardExpDate;
        partial void OnuserCardExpDateChanging(global::System.String value);
        partial void OnuserCardExpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> userCardCCV
        {
            get
            {
                return _userCardCCV;
            }
            set
            {
                OnuserCardCCVChanging(value);
                ReportPropertyChanging("userCardCCV");
                _userCardCCV = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userCardCCV");
                OnuserCardCCVChanged();
            }
        }
        private Nullable<global::System.Int32> _userCardCCV;
        partial void OnuserCardCCVChanging(Nullable<global::System.Int32> value);
        partial void OnuserCardCCVChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userCardName
        {
            get
            {
                return _userCardName;
            }
            set
            {
                OnuserCardNameChanging(value);
                ReportPropertyChanging("userCardName");
                _userCardName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userCardName");
                OnuserCardNameChanged();
            }
        }
        private global::System.String _userCardName;
        partial void OnuserCardNameChanging(global::System.String value);
        partial void OnuserCardNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mydbModel", "userCreditCardID", "userinfo")]
        public EntityCollection<userinfo> userinfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<userinfo>("mydbModel.userCreditCardID", "userinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<userinfo>("mydbModel.userCreditCardID", "userinfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mydbModel", Name="userinfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class userinfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new userinfo object.
        /// </summary>
        /// <param name="iduserInfo">Initial value of the iduserInfo property.</param>
        public static userinfo Createuserinfo(global::System.Int32 iduserInfo)
        {
            userinfo userinfo = new userinfo();
            userinfo.iduserInfo = iduserInfo;
            return userinfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 iduserInfo
        {
            get
            {
                return _iduserInfo;
            }
            set
            {
                if (_iduserInfo != value)
                {
                    OniduserInfoChanging(value);
                    ReportPropertyChanging("iduserInfo");
                    _iduserInfo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("iduserInfo");
                    OniduserInfoChanged();
                }
            }
        }
        private global::System.Int32 _iduserInfo;
        partial void OniduserInfoChanging(global::System.Int32 value);
        partial void OniduserInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userFirstName
        {
            get
            {
                return _userFirstName;
            }
            set
            {
                OnuserFirstNameChanging(value);
                ReportPropertyChanging("userFirstName");
                _userFirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userFirstName");
                OnuserFirstNameChanged();
            }
        }
        private global::System.String _userFirstName;
        partial void OnuserFirstNameChanging(global::System.String value);
        partial void OnuserFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userLastName
        {
            get
            {
                return _userLastName;
            }
            set
            {
                OnuserLastNameChanging(value);
                ReportPropertyChanging("userLastName");
                _userLastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userLastName");
                OnuserLastNameChanged();
            }
        }
        private global::System.String _userLastName;
        partial void OnuserLastNameChanging(global::System.String value);
        partial void OnuserLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> userAddID
        {
            get
            {
                return _userAddID;
            }
            set
            {
                OnuserAddIDChanging(value);
                ReportPropertyChanging("userAddID");
                _userAddID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userAddID");
                OnuserAddIDChanged();
            }
        }
        private Nullable<global::System.Int32> _userAddID;
        partial void OnuserAddIDChanging(Nullable<global::System.Int32> value);
        partial void OnuserAddIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> userPurchasesID
        {
            get
            {
                return _userPurchasesID;
            }
            set
            {
                OnuserPurchasesIDChanging(value);
                ReportPropertyChanging("userPurchasesID");
                _userPurchasesID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userPurchasesID");
                OnuserPurchasesIDChanged();
            }
        }
        private Nullable<global::System.Int32> _userPurchasesID;
        partial void OnuserPurchasesIDChanging(Nullable<global::System.Int32> value);
        partial void OnuserPurchasesIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userEmail
        {
            get
            {
                return _userEmail;
            }
            set
            {
                OnuserEmailChanging(value);
                ReportPropertyChanging("userEmail");
                _userEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userEmail");
                OnuserEmailChanged();
            }
        }
        private global::System.String _userEmail;
        partial void OnuserEmailChanging(global::System.String value);
        partial void OnuserEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> userCreditCardID
        {
            get
            {
                return _userCreditCardID;
            }
            set
            {
                OnuserCreditCardIDChanging(value);
                ReportPropertyChanging("userCreditCardID");
                _userCreditCardID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userCreditCardID");
                OnuserCreditCardIDChanged();
            }
        }
        private Nullable<global::System.Int32> _userCreditCardID;
        partial void OnuserCreditCardIDChanging(Nullable<global::System.Int32> value);
        partial void OnuserCreditCardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userPhoneNumber
        {
            get
            {
                return _userPhoneNumber;
            }
            set
            {
                OnuserPhoneNumberChanging(value);
                ReportPropertyChanging("userPhoneNumber");
                _userPhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userPhoneNumber");
                OnuserPhoneNumberChanged();
            }
        }
        private global::System.String _userPhoneNumber;
        partial void OnuserPhoneNumberChanging(global::System.String value);
        partial void OnuserPhoneNumberChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mydbModel", "uerAddID", "useraddress")]
        public useraddress useraddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<useraddress>("mydbModel.uerAddID", "useraddress").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<useraddress>("mydbModel.uerAddID", "useraddress").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<useraddress> useraddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<useraddress>("mydbModel.uerAddID", "useraddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<useraddress>("mydbModel.uerAddID", "useraddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mydbModel", "userCreditCardID", "usercreditcardinfo")]
        public usercreditcardinfo usercreditcardinfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usercreditcardinfo>("mydbModel.userCreditCardID", "usercreditcardinfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usercreditcardinfo>("mydbModel.userCreditCardID", "usercreditcardinfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<usercreditcardinfo> usercreditcardinfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usercreditcardinfo>("mydbModel.userCreditCardID", "usercreditcardinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<usercreditcardinfo>("mydbModel.userCreditCardID", "usercreditcardinfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mydbModel", "userPurchasesID", "userpurchases")]
        public userpurchas userpurchas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<userpurchas>("mydbModel.userPurchasesID", "userpurchases").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<userpurchas>("mydbModel.userPurchasesID", "userpurchases").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<userpurchas> userpurchasReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<userpurchas>("mydbModel.userPurchasesID", "userpurchases");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<userpurchas>("mydbModel.userPurchasesID", "userpurchases", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mydbModel", Name="userplaylist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class userplaylist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new userplaylist object.
        /// </summary>
        /// <param name="userplaylistID">Initial value of the userplaylistID property.</param>
        public static userplaylist Createuserplaylist(global::System.Int32 userplaylistID)
        {
            userplaylist userplaylist = new userplaylist();
            userplaylist.userplaylistID = userplaylistID;
            return userplaylist;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userplaylistID
        {
            get
            {
                return _userplaylistID;
            }
            set
            {
                if (_userplaylistID != value)
                {
                    OnuserplaylistIDChanging(value);
                    ReportPropertyChanging("userplaylistID");
                    _userplaylistID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("userplaylistID");
                    OnuserplaylistIDChanged();
                }
            }
        }
        private global::System.Int32 _userplaylistID;
        partial void OnuserplaylistIDChanging(global::System.Int32 value);
        partial void OnuserplaylistIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userplaylistNAME
        {
            get
            {
                return _userplaylistNAME;
            }
            set
            {
                OnuserplaylistNAMEChanging(value);
                ReportPropertyChanging("userplaylistNAME");
                _userplaylistNAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userplaylistNAME");
                OnuserplaylistNAMEChanged();
            }
        }
        private global::System.String _userplaylistNAME;
        partial void OnuserplaylistNAMEChanging(global::System.String value);
        partial void OnuserplaylistNAMEChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mydbModel", "playlist_song", "songinfo")]
        public EntityCollection<songinfo> songinfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<songinfo>("mydbModel.playlist_song", "songinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<songinfo>("mydbModel.playlist_song", "songinfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mydbModel", Name="userpurchas")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class userpurchas : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new userpurchas object.
        /// </summary>
        /// <param name="userPurchasesID">Initial value of the userPurchasesID property.</param>
        public static userpurchas Createuserpurchas(global::System.Int32 userPurchasesID)
        {
            userpurchas userpurchas = new userpurchas();
            userpurchas.userPurchasesID = userPurchasesID;
            return userpurchas;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userPurchasesID
        {
            get
            {
                return _userPurchasesID;
            }
            set
            {
                if (_userPurchasesID != value)
                {
                    OnuserPurchasesIDChanging(value);
                    ReportPropertyChanging("userPurchasesID");
                    _userPurchasesID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("userPurchasesID");
                    OnuserPurchasesIDChanged();
                }
            }
        }
        private global::System.Int32 _userPurchasesID;
        partial void OnuserPurchasesIDChanging(global::System.Int32 value);
        partial void OnuserPurchasesIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> idSongInfo
        {
            get
            {
                return _idSongInfo;
            }
            set
            {
                OnidSongInfoChanging(value);
                ReportPropertyChanging("idSongInfo");
                _idSongInfo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idSongInfo");
                OnidSongInfoChanged();
            }
        }
        private Nullable<global::System.Int32> _idSongInfo;
        partial void OnidSongInfoChanging(Nullable<global::System.Int32> value);
        partial void OnidSongInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mydbModel", "idSongInfo", "songinfo")]
        public songinfo songinfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<songinfo>("mydbModel.idSongInfo", "songinfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<songinfo>("mydbModel.idSongInfo", "songinfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<songinfo> songinfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<songinfo>("mydbModel.idSongInfo", "songinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<songinfo>("mydbModel.idSongInfo", "songinfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mydbModel", "userPurchasesID", "userinfo")]
        public EntityCollection<userinfo> userinfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<userinfo>("mydbModel.userPurchasesID", "userinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<userinfo>("mydbModel.userPurchasesID", "userinfo", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
